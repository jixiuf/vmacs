#+OPTIONS:   H:2 num:nil toc:t \n:t @:t ::t |:t ^:t -:t f:t *:t <:t
#+TITLE: vmacs

基于evil-mode 提供一个适合vim emacs双修者,下载即可用的emacs配置集

宗旨
1. 下载即可用,所需的elisp依赖包都在此仓库中

   针对特定编程语言的外部依赖需要你下载,不过会给出详细的安装文档,保证在国内可下载
   #+BEGIN_SRC sh
     git clone --depth 1 https://github.com/jixiuf/vmacs.git ~/.emacs.d
     cd .emacs.d
   #+END_SRC
2. 中文支持良好,适于国内使用,配置文件中会有大量中文注释以便学习理解
3. 利用emacs27的pdump功能加快启动速度
   #+BEGIN_SRC sh
    brew tap d12frosted/emacs-plus
    brew install emacs-plus --HEAD --with-pdumper
    cd .emacs.d
    make dump
   #+END_SRC
    生成dump文件
4. mac 下几个脚本的封装
   bin/emd 用户启动emacs --daemon
   bin/ec 用户启动图形界面的emacsclient
   bin/em 用于启动终端界面的emacsclient


与spacemacs 进行比较
  1. spacemacs太笨重,安装过程有可能不顺利，导致想尝试的用户无法试用
  2. spacemacs 高度模块化，提供各种layer供你配置，
     而vmacs 则只提供本人觉得好的功能,尽量使配置简单化,你如果需要新功能
     建议下载vmacs后，自己进行修改,从根本上理解vmacs的配置
  3. 两者都将大量功能绑定到space上
  4. 对evil-mode按键进行大量定制，与vim的操作习惯会有较大不同

emacs使用时间长了会出现小指疼痛的现象，当然很多人有相应的习惯来缓解，
比如用掌根按ctrl,换用合适的键盘，交换ctrl alt  capslock 的位置等。
vmacs则尽量将功能移到space上减少小指的使用



* 对evil-mode 的定制理念
  vim 分为normal insert visual 3种状态
  而evil-mode 提供了normal insert visual  emacs四种状态

  其中 evil-emacs-state 状态相当于原生emacs,

  与 evil-insert-state 的区别是evil-insert-state下进行了一些适合vim用户的绑定,
  如ctrl-n ctrl-p进行补全等

  vmacs进行定制时，希望进入insert态时，能够使用到原生的emacs按键绑定

  几个需要着重说明的按键
  | gd          | goto-definition                 | 跳转到函数、类、等的定义处                                                  |
  | space,      | bm-previous                     | 比如/搜索后，或gd跳转后以方便回退到光标原本的位置                           |
  | v           | evil-backward-symbol-begin      | 向后移动到symbol的开头处                                                    |
  | e           | evil-forward-symbol-begin       | 向前移动到symbol的开头处                                                    |
  | sv          | evil-visual-char                | 开始选中一片区域,等同于vim里的v                                             |
  | mv          | evil-visual-block               | 开始选中块状区域,等同于vim里的ctrl-v                                        |
  | sm或V       | evil-visual-line                | 按行选中                                                                    |
  | space space | ivy-switch-buffer               | 快速打开文件或切换buffer(支持recentf/git内文件搜索) (可以用空格分隔关键词)  |
  | space i     | counsel-git                     | 快速打开git管理的文件                                (可以用空格分隔关键词) |
  | space j     | dired-jump                      | 打开dired浏览目录(打开之后"u"表示到上层目录),"/"可以搜过过滤                |
  | space g     | vmacs-counsel-rg                | 使用rg来grep当前目录的文件                                                  |
  | space s     | evil-write-all                  | 保存所有文件                                                                |
  | space vj    | magit-status                    | 打开magit ，git管理的插件                                                   |
  | space ff    | counsel-find-file               | 按目录层级一层层的寻找、打开、新建文件                                      |
  | ctrl-;      | iedit-mode                      | 启动iedit 用于同时快速编辑光标下的变量等,相当于批量替换变量名               |
  | mf          | evil-mark-defun                 | 选中当前function,键ctrl-g，则光标回退到未选中状态时的位置                   |
  | mh          | evil-M-h                        | 选中一个段落，   键ctrl-g，则光标回退到未选中状态时的位置                   |
  | mxh/或mb    | evil-mark-whole-buffer          | 选中当前buffer的所有内容，全选                                              |
  | f3          | cd-iterm2                       | 在iterm2中新开一个tab页并跳转到当前文件所在的目录                           |
  | Ctrl-v      | golden-ratio-scroll-screen-up   | 向下翻页                                                                    |
  | alt-v       | golden-ratio-scroll-screen-down | 向上翻页                                                                    |
* C C++ 开发
** company
依赖的外部命令:clang
相关配置
https://github.com/jixiuf/vmacs/blob/master/conf/conf-company-mode.el
[[file:doc/company-c.png]]
