#!/usr/bin/env bash
# need dotool
# focuses the next window on a workspace
# support switching between emacs window and tmux pane

TERM_CLASS_REGEX=${TERM_CLASS_REGEX:-org\.wezfurlong\.wezterm|.*foot.*|.*kitty.*|.*Alacritty.*|dterm}

arg="$1"

next-window() {
    if [ "$XDG_SESSION_DESKTOP"  = "Hyprland" ]; then
        hyprctl --batch "dispatch cyclenext; dispatch bringactivetotop"
    else
        sway-focus-next
    fi
}

if [ "$XDG_SESSION_DESKTOP"  = "Hyprland" ]; then
    ws=$(hyprctl activeworkspace -j)
    ws_id=`echo $ws|jq -r '.id'`
    app_cnt=$(hyprctl clients -j | jq -cr '.[] | select(.workspace.id == '$ws_id')'|wc -l)
    appinfo=`hyprctl activewindow -j`
    class=`echo $appinfo|jq -r '.class'|head -n 1`
    title=`echo $appinfo|jq -r '.title'|head -n 1`
    fullscreen=`echo $appinfo|jq -r '.fullscreen'|head -n 1` # true/false
    floating=`echo $appinfo|jq -r '.floating'|head -n 1`
else
    app_cnt=$(swaymsg -t get_workspaces |jq -r '.[] | select(.focused==true)|.focus|length')
    appinfo=`swaymsg -t get_tree | jq -r 'recurse(.nodes[], .floating_nodes[]) |select(.focused)'`
    class=`echo $appinfo|jq -r '(.app_id // .window_properties.class // "")'|head -n 1`
    title=$(echo $appinfo|jq -r '.name')
    fullscreen=`echo $appinfo|jq -r '.fullscreen_mode'` # 0 1
    if [ "$fullscreen" == "1" ]; then
        fullscreen="true"
    else
        fullscreen="false"
    fi
    floating=`echo $appinfo|jq -r '.type'|head -n 1`    # floating_con con
    if [ "$floating" == "floating_con" ]; then
        floating="true"
    else
        floating="false"
    fi
fi

# if front app exits
if [ -n "$appinfo" ]; then
    # ( "$app_cnt" = "1" || "$fullscreen" = "true" )
    if [[ "$class" = "emacs" && -z "$arg" ]]; then
        # (global-set-key (kbd "C-x o") 'vmacs-other-window)
        # (defun vmacs-other-window()
        #   (interactive)
        #   (select-window (next-window))
        #   (when (eq (selected-window) vmacs-window-status)
        #     (call-process "other-window" nil nil nil "skip-emacs"))
        #   (unless (and vmacs-window-status
        #                (window-live-p vmacs-window-status))
        #     (setq vmacs-window-status (selected-window))))
        echo key ctrl+x o|dotoolc
        exit 0
    elif [[  "$class" =~ ^($TERM_CLASS_REGEX)$  && "$title" == *"GNU/Emacs"* &&
                ( "$app_cnt" = "1" || "$fullscreen" = "true" ||"$floating" == "true" ) &&
                -z "$arg" ]]; then
        echo key ctrl+x o|dotoolc
        exit 0
    elif [[ "$class" =~ ^($TERM_CLASS_REGEX)$ && "$title" == "TMUX:"*    ]]; then
        #tmux: set -g set-titles-string 'TMUX:#{session_name}:#{pane_title}'
        title=${title#TMUX:}
        tmux_session=${title%%:*}
        if [ "$(tmux list-panes -t $tmux_session | wc -l)" -gt 1 ]; then
            last_pane_id=$(tmux list-panes -t $tmux_session -F "#{pane_id}"|tail -n 1)
            cur_pane_id=$(tmux display-message -t $tmux_session -p '#{pane_id}')
            tmux select-pane  -t $tmux_session:.+
            if [ "$last_pane_id" = "$cur_pane_id" ]  && [ "$floating" == "false" ]; then
                next-window
            fi
            exit 0
        fi
    fi
fi
next-window
