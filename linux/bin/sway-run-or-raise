#!/usr/bin/env bash
# arg1: target_class (regexp)
# other args: command
# demo:
# 根据 arg1(window target_class) 来匹配当前运行的程序中有没有匹配的窗口，
# 1. 如果有
# 1.1 若此窗口已经是聚焦的窗口，则将焦点转移到上一次聚焦的窗口上
# 1.2 若此窗口不是当前聚焦的窗口，则将焦点转移到此窗口
# 2. 如果没有，则使用 arg2 及之后的参数 以启动目录程序,并聚焦之(有可能程序是在其他 workspace 启动，故需要将焦点转移到那)
# sway-run-or-raise emacs emacs
# sway-run-or-raise 'firefox|firefox-esr' firefox
# sway-run-or-raise --cd --float-only  Alacritty alacritty  --working-directory=$(cwd||echo $HOME)
# sway-run-or-raise --float-only  Alacritty alacritty  --working-directory=$(cwd||echo $HOME)
# sway-run-or-raise --floating   'dterm|Alacritty|kitty|org.wezfurlong.wezterm'  term.sh --  --class=dterm --working-directory=$(cwd||echo $HOME)
# sway-run-or-raise --cd --floating  'dterm|Alacritty|kitty|org.wezfurlong.wezterm' term.sh -- --class=dterm  --working-directory=$(cwd||echo $HOME)

# 有个特例，参见 cwd
# 若当前窗口是 emacs ,我能从 emacs 的 title 中获取到 emacs 的 default-directory(emacs 当前编辑的文件所在的目录)
# 而我的目录窗口若是 alacritty 终端，则当我切换到 alacritty 终端时，我希望执行 cd directory 命令，切换到与 emacs 中文件所在目录 相同的目录
# 需要依赖 ydotool
#
PROG=$( basename "$0" )
float_only=""
floating=""
maximize=""
cd=""
resize=""

TEMP=$( getopt --options h --longoptions maximize,cd,floating,float-only,resize:,help -- "$@" ) || exit 1
eval set -- "$TEMP"

for i in "$@"; do
    case "$i" in
        -h|--help)
            echo "Usage: $PROG OPTIONS target [runstring]"
            echo
            echo "Give focus to a program based on window class. If we can't give focus to something with that window class, then exec 'runstring'" |fmt
            echo
            echo "OPTIONS"
            echo "-f|--float-only  只在 target_floating 窗口中寻找匹配的 target"
            exit 0
            ;;
        --cd*)
            cd="set"
            shift
            ;;

        --maximize*)
            maximize="set"
            shift
            ;;
        --floating*)
            # 将目标窗口转成floating
            floating="true"
            shift
            ;;
        --float-only*)
            # 只匹配当前是floating 的
            float_only="set"
            shift
            ;;
        --resize*)
            resize="$2"
            shift
            shift
            ;;

    esac
done

shift # remove --

# $target= app_id for wayland or target_class for x11
target=$1
# 转成小写
# target=`echo $target|tr '[:upper:]' '[:lower:]'`
# 获取除第 1 个参数外的所有参数
shift 1
cmd="$@"
#
if [ -n "$float_only" ]; then
    # only match floating app
    # target_appinfo=`hyprctl clients -j | jq -rc '.[] | select((.class  | test("'"$target"'"; "i")) and (.floating == true) )'`
    target_appinfo=`swaymsg -t get_tree | jq -r 'recurse(.nodes[], .floating_nodes[]) | select(( ((.app_id // "")| test("'"$target"'"; "i")) or ((.window_properties.class  // "")| test("'"$target"'"; "i"))) and (.type =="floating_con") )'`
else
    # make the target floating
    if [ "$floating" == "true" ]; then
        # target_appinfo=`hyprctl clients -j | jq -rc '.[] | select((.class  | test("'"$target"'"; "i")) and (.floating == true) )'`
        # 优先匹配floating 的
        target_appinfo=`swaymsg -t get_tree | jq -r 'recurse(.nodes[], .floating_nodes[]) | select(( ((.app_id // "")| test("'"$target"'"; "i")) or ((.window_properties.class  // "")| test("'"$target"'"; "i"))) and (.type =="floating_con") )'`
        # target_appinfo=`hyprctl clients -j | jq -rc '.[] | select((.class  | test("'"$target"'"; "i")) and (.floating == true) )'`
        if [ -z "$target_appinfo" ]; then
            # target_appinfo=`hyprctl clients -j | jq -rc '.[] | select((.class |test("'"$target"'"; "i")))'`
            target_appinfo=`swaymsg -t get_tree | jq -r 'recurse(.nodes[], .floating_nodes[]) | select( ((.app_id // "")| test("'"$target"'"; "i")) or ((.window_properties.class  // "")|test("'"$target"'"; "i")))'`
        fi
    else
        target_appinfo=`swaymsg -t get_tree | jq -r 'recurse(.nodes[], .floating_nodes[]) | select( ((.app_id // "")| test("'"$target"'"; "i")) or ((.window_properties.class  // "")|test("'"$target"'"; "i")))'`
        # target_appinfo=`hyprctl clients -j | jq -rc '.[] | select((.class |test("'"$target"'"; "i")))'`
    fi
fi
if [ ! "$target_appinfo" ]; then
    # if app not found ,run the cmde
    if echo "$cmd" | grep -q " "; then
        $cmd &
    else
        $cmd &
    fi
    sleep 0.3
    # 如果期望新创建的窗口是floating,则尝试将期转成floating
    if [ "$floating" == "true" ]; then
        if [ -n "$float_only" ]; then
            target_appinfo=`swaymsg -t get_tree | jq -r 'recurse(.nodes[], .floating_nodes[]) | select(( ((.app_id // "")| test("'"$target"'"; "i")) or ((.window_properties.class  // "")| test("'"$target"'"; "i"))) and (.type =="floating_con") )'`
        else
            target_appinfo=`swaymsg -t get_tree | jq -r 'recurse(.nodes[], .floating_nodes[]) | select( ((.app_id // "")| test("'"$target"'"; "i")) or ((.window_properties.class  // "")|test("'"$target"'"; "i")))'`
        fi
        # target_floating=`echo $target_appinfo|jq -r '.floating'|head -n 1`
        target_floating=`echo $target_appinfo|jq -r '.type'|head -n 1` # con or floating_con
        if [ "$target_floating" == "con" ]; then
            # 如果目标窗口不是floating,且 有--floating 参数（ 即想让目标窗口以floating的形式展示）
            swaymsg "floating toggle"
            # hyprctl dispatch centerwindow
        fi
        target_app_id=`echo $target_appinfo|jq -r '(.app_id // "")'|head -n 1`
        target_class=`echo $target_appinfo|jq -r '(.window_properties.class // "")'|head -n 1`
        # echo "$target_app_id"
        if [ -z "$target_app_id" ]; then # no app_id,x11 window
            swaymsg "[class=\"${target_class}\"] focus"
        else                    # wayland window
            swaymsg "[app_id=\"${target_app_id}\"] focus"
        fi
    fi
else
    # frontappinfo=`hyprctl clients -j | jq -r '.[] |select(.focused)'`
    front_app=`swaymsg -t get_tree | jq -r 'recurse(.nodes[], .floating_nodes[]) |select(.focused)'`
    # front_app=`hyprctl activewindow -j`
    # front_class=`echo $front_app|jq -r '.class'`
    front_addr=`echo $front_app|jq -r '.id'`
    front_floating=`echo $front_app|jq -r '.type'` #con or floating_con
    front_fullscreen=`echo $front_app|jq -r '.fullscreen_mode'` # 0 1

    # front_ws_name=`echo $front_app|jq -r '.workspace.name'`
    # front_ws_id=`echo $front_app|jq -r '.workspace.id'`
    # jq 的(.app_id // "") 表示取 app_id 若无此字段则为空串
    # target_class=`echo $target_appinfo|jq -r '.class'|head -n 1`
    target_app_id=`echo $target_appinfo|jq -r '(.app_id // "")'|head -n 1`
    target_class=`echo $target_appinfo|jq -r '(.window_properties.class // "")'|head -n 1`
    target_addr=`echo $target_appinfo|jq -r '.id'|head -n 1`
    target_floating=`echo $target_appinfo|jq -r '.type'|head -n 1`
    target_title=`echo $target_appinfo|jq -r '.name'|head -n 1`
    # target_ws_id=`echo $target_appinfo|jq -r '.workspace.id'`
    # target_pid=`echo $target_appinfo|jq -r '.pid'`
    cwd=$(cwd)
    if [  "$front_addr" != "$target_addr" ]; then
        # # 如果当前窗口是special 的window，则先隐藏之,以免其遮挡聚焦后的窗口
        # if [[ "$front_ws_name" == *"special"* ]]; then
        #     hyprctl dispatch "togglespecialworkspace"
        # fi
        # # 如果当前窗口是floating，则将其move 到special workspace,以免其遮挡聚焦后的窗口
        # if [[ "$front_floating" == "true" ]]; then
        #     hyprctl dispatch "movetoworkspacesilent special address:${front_addr}"
        # fi

        if [[ "$target_floating" == "floating_con" || "$floating" == "true" ]]; then
            # 如果当前窗口是fullscreen，则将其恢复
            if [ "$front_fullscreen" == "1" ]; then
                swaymsg "fullscreen"
            fi
            # move window to current ws
            # hyprctl keyword animations:enabled 0
            # swaymsg  "[con_id=$target_addr] move window to workspace current"
            # hyprctl dispatch "movetoworkspacesilent e+0,address:${target_addr}"
            # hyprctl dispatch "focuswindow address:${target_addr}"
            if [ -z "$target_app_id" ]; then # no app_id,x11 window
                swaymsg "[class=\"${target_class}\"] focus"
            else                    # wayland window
                swaymsg "[app_id=\"${target_app_id}\"] focus"
            fi
            if [[ "$floating" = "true" && "$target_floating" = "false" ]]; then
                # 如果目标窗口不是floating,且 有--floating 参数（ 即想让目标窗口以floating的形式展示）
                swaymsg  "[con_id=$target_addr] floating toggle"
                # hyprctl dispatch togglefloating address:${target_addr}
                # hyprctl dispatch centerwindow
                # resize 有bug
                # hyprctl dispatch resizeactive "$resize"
            fi

            # hyprctl keyword animations:enabled 1
            if [ $maximize ]; then
                swaymsg "fullscreen"
            fi
        else
            # 如果当前窗口是floating，则将其move 到special workspace,以免其遮挡聚焦后的窗口
            # if [[ "$front_floating" == "true" && "$target_ws_id" == "$front_ws_id" ]]; then
            #     swaymsg "[con_id=$front_addr] move scratchpad"
            #     # hyprctl dispatch "movetoworkspacesilent special address:${front_addr}"
            # fi
            if [ -z "$target_app_id" ]; then # no app_id,x11 window
                swaymsg "[class=\"${target_class}\"] focus"
            else                    # wayland window
                swaymsg "[app_id=\"${target_app_id}\"] focus"
            fi
        fi
        if [[  "$target" == *"foot"*   || "$target" == *"dterm"*  ]]; then
            if [[ -n "$cwd" && -n "$cd" ]]; then
                # 如果 cwd 获取到当前 working directory
                # 且目标 app 是 alacritty 则在 alacritty 中 执行 cd 目标目录
                # root@host:/path
                regex="(\/ssh:)?([a-zA-Z0-9_\-]+@)?([a-zA-Z0-9_\.\-]+):(.+)"
                tmux_session=""
                if [[ $target_title == TMUX:* ]]; then
                    # Remove the prefix "TMUX:" and then split the remaining string by ":"
                    # 格式： "TMUX:session:path"
                    target_title=${target_title#TMUX:}
                    tmux_session=${target_title%%:*}
                    # cwd=${cwd#*:}
                fi
                cd.sh $cwd $tmux_session
            fi
        fi
    else
        if [ "$target_floating" == "floating_con" ]; then
            ## （放进 scrtchpad 后都变成活动窗口了，故 mark 其原始 type）
            # swaymsg mark "sway-run-or-raise:floating_con:$id"
            swaymsg  "[con_id=$target_addr] move window to scratchpad"
        else
            # 需要与 bin/sway-track-prev-focus  的配合使用
            # 如果目标窗口已经是当前窗口,且不是 floating，则将焦点转到上一次聚焦的窗口，
            swaymsg '[con_mark=_prev_con] focus'
        fi
    fi
fi
