#   -*- coding: utf-8 -*-
# Rime schema settings
# 各字段含义
# https://github.com/LEOYoon-Tsaw/Rime_collections/blob/master/Rime_description.md
#  关于lua 开发相关白内容: https://github.com/hchunhui/librime-lua/wiki/Scripting
# 五笔支持长句，单字全码不足4码时 可以","结尾

schema:
  schema_id: egret_wubi_py
  name: "白鹭五笔·拼音流"
  version: "0.9"
  author:
    - 發明人 jixiuf
  description: |
    白鹭五笔流·拼音流  可以在一句中即打五笔又打拼音的输入法
  dependencies:
    - egret        # 这里依赖 egret 输入法的字库反查
    - egret_wubi        # 这里依赖 egret 输入法的字库反查
    - egret_wubi_sentence        # 这里依赖 egret 输入法的字库反查
    - stroke # builtin: hspnz(一丨丿丶乙)
__include: egret.common.yaml:editor
__include: egret.common.yaml:switches
__include: egret.common.yaml:opencc
__include: egret.common.yaml:guide
__include: egret.common.yaml:lua_config
speller:
  __include: egret.common.yaml:wubi_sentence_speller
  algebra:
    __patch:
      - egret.common.yaml:algebra_wubi_sentence
      - egret.common.yaml:algebra_remove_pinyin_tone

engine:
  processors:
    # 彻底地移除英文状态，似乎注掉ascii_composer更有效
    - lua_processor@*select_character # "C-h" 或 "C-l" 以词定字 serch: select_first_character
    - ascii_composer #處理西文模式及中西文切換 我把此移除验证禁用其英文输入态
    - recognizer #與 matcher 搭配，處理符合特定規則的輸入碼，如網址、反查等
    # - lua_processor@*sbxlm.key_binder # 绑定按键
    - key_binder # 在特定條件下將按鍵綁定到其他按鍵，如重定義逗號、句號爲候選翻頁鍵
    - speller                   # 將字母鍵加入輸入碼序列
    - punctuator #句讀處理器，將單個字符按鍵直接映射爲文字符號
    - selector                  #  選字、換頁  選字處理器，處理數字選字鍵、上、下候選定位、換頁鍵
    - navigator                 #   # 移動插入點  處理輸入欄內的光標移動鍵
    - express_editor  #編輯器，處理空格、回車上屏、回退鍵等
    # 用 fluency_editor 代替了 express_editor 是语句流，可以用空格断词。
    # - fluency_editor
  segmentors:                   # 這批組件識別不同內容類型，將輸入碼分段並加上tag
    - ascii_segmentor           # 標識西文段落〔譬如在西文模式下〕字母直接上屛
    - matcher                   # 配合recognizer標識符合特定規則的段落，如網址、反查等，加上特定tag
    - abc_segmentor             # 標識常規的文字段落，加上abc這個tag
    - punct_segmentor           #  標識句讀段落〔鍵入標點符號用〕加上punct這個tag
    - affix_segmentor@add_user_dict # 用戶自定義tag
    # - affix_segmentor@emojis
    - fallback_segmentor
  translators:
    - punct_translator    # 对应下面的punctuator，用来输入标点
    # @ 之后多了一个 *。这个星号表示后面的名字是模块名而不是全局变量名。
    # 当遇到星号时，librime-lua 会使用 require 机制加载模块，
    # 然后将其返回值作为 Rime 组件加载到输入法框架中。
    # - lua_translator@date_translator  #去 rime.lua 找date_translator function
    - lua_translator@*date_translator      # 时间、日期、星期 去 lua/目录下找date_translator.lua
    - lua_translator@*lunar              # 农历
    - lua_translator@*number_translator  # R 输入大写数字
    # - table_translator@custom_phrase # 1、2码置顶
    # - script_translator@translator
    - lua_translator@*dynamic_translator
    - lua_translator@*unicode              # Unicode
    - script_translator@add_user_dict
    - script_translator@emojis
    - reverse_lookup_translator@reverse_lookup # `用拼音打出的字，会提示五笔编码
  filters:
  # 长词优先 (即wq 后 第4个词的长度必然大于第1个candidate,即提升部分长词到第4，5个选项)
  # 见下面 long_word_filter 相关配置
    - lua_filter@*long_word_filter
    - lua_filter@*reduce_emoji_filter   # 按需启用，作用是降低Emoji在候选项中的位置排序(顺序要求：Emoji > 降低排序)
    - lua_filter@*is_in_user_dict # 用户词典的词加上一个*
    - reverse_lookup_filter@wubi_comment # 展示五笔的编码
    - simplifier@traditionalize                     # 简繁切换
    - simplifier@emoji                              # Emoji 彩色or 黑白
    # - lua_filter@reduce_english_filter  # 降低部分英语单词在候选项的位置
    # - charset_filter@gbk            # (※3) 默认 GBK
    - uniquifier                # 去重，比如多个繁体字对应一个简体字，此时可能需要去重

 # 见 lua/dynamic_translator.lua 的说明
dynamic_translator:
  table_translator: table_translator@custom_phrase
  script_translator: script_translator@translator

grammar:
  language: wanxiang-lts-zh-hans
  # collocation_max_length: 8         #命中的最长词组(整句輸入可忽畧此項)
  # collocation_min_length: 2         #命中的最短词组，搭配词频健全的词库时候应当最小值设为3避开2字高频词(整句輸入可忽畧此項)
  collocation_penalty: -10          #默认-12 对常见搭配词组施加的惩罚值。较高的负值会降低这些搭配被选中的概率，防止过于频繁地出现某些固定搭配。
  non_collocation_penalty: -12      #默认-12 对非搭配词组施加的惩罚值。较高的负值会降低非搭配词组被选中的概率，避免不合逻辑或不常见的词组组合。
  weak_collocation_penalty: -24     #默认-24 对弱搭配词组施加的惩罚值。保持默认值通常是为了有效过滤掉不太常见但仍然合理的词组组合。
  rear_penalty: -30                 #默认-18 对词组中后续词语的位置施加的惩罚值。较高的负值会降低某些词语在句子后部出现的概率，防止句子结构不自然。

# #关于五笔拼音同时存在，且也能调拼音词频的配置 http://tieba.baidu.com/p/2283095493
# # 以往要实现五笔拼音混打，用 table_translator 出五笔，拼音只好用 reverse_lookup_translator ，因为 r10n_translator 和 table_translator 是互斥的。
# # 现在好了，你可以创建具名的 translator 实例：
# # 这比原来的 table_translator + reverse_lookup_translator 强大之处是拼音也会独立地调频、组词造句鸟。
# # 不过，如果你仍需要拼音反查五笔编码的功能，那就还需要 reverse_lookup_translator
# # 如果没有别名，则 {table|script}_translator 默认用 translator: 节点， reverse_lookup_translator 默认用 reverse_lookup: 节点。
translator:
  # https://github.com/amzxyz/RIME-LMDG
  # 开启万象语言模型、万象原子词库 https://emacs-china.org/t/rime/28508/31
  contextual_suggestions: true
  max_homophones: 7
  max_homographs: 7

  comment_format:
    - "xform/(^|[ '])[^[]+[[]/$1/"
  dictionary: egret_wubi_py
  prism: egret_wubi_py
  user_dict: user_dicts/egret_wubi_py.user.dict
# ↓ 用户词典格式，tabledb（文本） 或 userdb （二进制）。
  db_class: tabledb
  # enable_completion: true       # 〔僅table_translator有效〕
  # enable_encoder: true          # 〔僅table_translator有效〕
  enable_sentence: true
  enable_user_dict: true
  # encode_commit_history: true #encode_commit_history
  initial_quality: 1
  spelling_hints: 0
  # max_phrase_length: 4          # 〔僅table_translator有效〕

wubi_comment:                   # 显示五笔编码， 这个配置好像不管哪种输入法打的字都显示五笔，我只想当用拼音输入时显示五笔编码 ，目前还不知怎么配
  tags: [ abc ]
  dictionary: egret_wubi
  # prism: 当多个schema 共用同一个dictionary 时 需要用prism 为其指定不同的名字以作区分
  # build 目录下会生成 相应然 prism.bin
  prism: egret_wubi
  overwrite_comment: true  # 覆蓋其他提示
  comment_format:
    # 同時顯示羅馬字拼寫
    # - "xform/ .*$//"            # 当一个字有多个五笔编码时，只显示第一个，即把空格后的所有内容变成空
    - "xform/[ ].*$//"            # 当一个字有多个五笔编码时，只显示第一个，即把空格后的所有内容变成空

# 自定义词典加词(ac引导)
add_user_dict:
  prefix: "AC"
  tips: "〔自造词〕"
  tag: add_user_dict
  dictionary: egret_wubi_py
  # prism: 当多个schema 共用同一个dictionary 时 需要用prism 为其指定不同的名字以作区分
  # build 目录下会生成 相应然 prism.bin
  prism: egret_wubi_py
  user_dict: user_dicts/egret_wubi_py.user.dict
# ↓ 用户词典格式，tabledb（文本） 或 userdb （二进制）。
  db_class: tabledb
  initial_quality: -1
  enable_charset_filter: false
  enable_completion: true
  enable_encoder: true
  enable_sentence: true
  enable_user_dict: true
  encode_commit_history: true
  preedit_format:

  spelling_hints: 2
  comment_format:
    - "xform/(^|[ '])[^[]+[[]/$1/" ## 编码提示只显示辅助码部分
    # 同時顯示羅馬字拼寫
    # - "xform/[ ].*$//"            # 当一个字有多个五笔编码时，只显示第一个，即把空格后的所有内容变成空

  # https://github.com/amzxyz/RIME-LMDG
  # 开启万象语言模型、万象原子词库 https://emacs-china.org/t/rime/28508/31
  contextual_suggestions: true
  max_homophones: 7
  max_homographs: 7

# rime-wubi-sentence 使用的custom_phrase
# 而我选择使用下面的 custom_phrase 的dictionary 的形式
# 加载速度应该会比user_dict文本字典要快
#
# custom_phrase:
#   dictionary: ""
#   user_dict: user_dicts/wb86_cn_dicts/custom_phrase
#   db_class: stabledb        # 只读数据库，无法动态调频；设为 tabledb 可以动态调频
#   enable_completion: false
#   enable_sentence: false
#   initial_quality: 1.1
#   ##  默认为不超过 2 个字的候选项显示输入码；将 2 改为 0 可关闭编码提示，
#   ##  改为 1 则是只显示单字的输入码，依此类推。
#   spelling_hints: 2
#   comment_format:
#     - "xform/(^|[ '])[^[]+[[]/$1/" ## 编码提示只显示辅助码部分
#     # 同時顯示羅馬字拼寫
#     # - "xform/[ ].*$//"            # 当一个字有多个五笔编码时，只显示第一个，即把空格后的所有内容变成空

#   # https://github.com/amzxyz/RIME-LMDG
#   # 开启万象语言模型、万象原子词库 https://emacs-china.org/t/rime/28508/31
#   contextual_suggestions: true
#   max_homophones: 7
#   max_homographs: 7
custom_phrase:                 # wubi
  # https://github.com/amzxyz/RIME-LMDG
  # 开启万象语言模型、万象原子词库 https://emacs-china.org/t/rime/28508/31
  contextual_suggestions: true
  max_homophones: 7
  max_homographs: 7

  dictionary: egret_wubi
  # prism: 当多个schema 共用同一个dictionary 时 需要用prism 为其指定不同的名字以作区分
  # build 目录下会生成 相应然 prism.bin
  prism: egret_wubi
  enable_user_dict: true        # 调词频用的到 是否開啓用戶詞典〔用戶詞典記錄動態字詞頻、用戶詞〕
  enable_sentence: false         # 是否開啓自動造句
  enable_encoder: true          #  是否開啓自動造詞
  encode_commit_history: true   # 是否對已上屛詞自動成詞
  enable_completion: true #: 提前顯示尚未輸入完整碼的字〔僅table_translator有效〕
  initial_quality: 10 # 优先级
  spelling_hints: 2
  comment_format:
    - "xform/(^|[ '])[^[]+[[]/$1/" ## 编码提示只显示辅助码部分
    # 同時顯示羅馬字拼寫
    # - "xform/[ ].*$//"            # 当一个字有多个五笔编码时，只显示第一个，即把空格后的所有内容变成空
  disable_user_dict_for_patterns:
    - "^z.*$"                   # 对z开头的词不记录到用户词典中(不进行调频)
    - "^[a-y]$"                   # 对单字母打出的字不进行调频
    - "^[a-y]{1,2}$"                   # 对两个字母打出白字不进行调频
  user_dict: user_dicts/egret_wubi.user.dict
  # # ↓ 用户词典格式，tabledb（文本） 或 userdb （二进制）。
  db_class: tabledb
  max_phrase_length: 4
#   enable_charset_filter: true
#   sentence_over_completion: true # 在無全碼對應字而僅有逐鍵提示時也開啓智能組句〔僅table_translator有效〕
emojis:
  # tag: emojis
  dictionary: emoji
  enable_completion: true
  initial_quality: 5
  # prefix: "AE"
  #suffix: "'"
  tips: " Emoji"

reverse_lookup:
  dictionary: egret_py
  prefix: "`"
  suffix: "'"
  tips: 〔拼音〕
  initial_quality: 1 # 优先级
  user_dict: user_dicts/egret_py.user.dict
  # ↓ 用户词典格式，tabledb（文本） 或 userdb （二进制）。
  db_class: tabledb
  overwrite_comment: true # 覆盖其他提示
  preedit_format: # 上屏码显示格式，
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/

abc_segmentor:
  extra_tags:
    - reverse_lookup
    # wubi_comment
