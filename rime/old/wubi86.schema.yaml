engine:
  filters:
    - uniquifier
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator
key_binder:
  bindings:
    - {accept: "Shift+Tab", send: "Shift+Left", when: composing} 
    - {accept: Tab, send: "Shift+Right", when: composing}
    - {accept: "Alt+Left", send: "Shift+Left", when: composing}
    - {accept: "Alt+Right", send: "Shift+Right", when: composing}
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    - {accept: "Control+Shift+3", toggle: ascii_punct, when: always}
    - {accept: "Control+Shift+numbersign", toggle: ascii_punct, when: always}
    - {accept: "Control+Shift+4", toggle: traditionalization, when: always}
    - {accept: "Control+Shift+dollar", toggle: traditionalization, when: always}
    - {accept: "Control+k", send: "Shift+Delete", when: composing}
    - {accept: KP_0, send: 0, when: composing}
    - {accept: KP_1, send: 1, when: composing}
    - {accept: KP_2, send: 2, when: composing}
    - {accept: KP_3, send: 3, when: composing}
    - {accept: KP_4, send: 4, when: composing}
    - {accept: KP_5, send: 5, when: composing}
    - {accept: KP_6, send: 6, when: composing}
    - {accept: KP_7, send: 7, when: composing}
    - {accept: KP_8, send: 8, when: composing}
    - {accept: KP_9, send: 9, when: composing}
    - {accept: KP_Decimal, send: period, when: composing}
    - {accept: KP_Multiply, send: asterisk, when: composing}
    - {accept: KP_Add, send: plus, when: composing}
    - {accept: KP_Subtract, send: minus, when: composing}
    - {accept: KP_Divide, send: slash, when: composing}
    - {accept: "Control+m", send: Return, when: composing}
    - {accept: "Control+w", send: "Control+BackSpace", when: composing}
    - {accept: semicolon, send: 2, when: has_menu}
    - {accept: "Control+i", send: "Shift+Right", when: composing}
    - {accept: "Control+o", send: "Shift+Left", when: composing}
    - {accept: "Control+e", toggle: chinese_english, when: has_menu}
    - {accept: "Control+1", send_sequence: "{Home}{Shift+Right}", when: composing}
    - {accept: "Control+2", send_sequence: "{Home}{Shift+Right}{Shift+Right}", when: composing}
    - {accept: "Control+3", send_sequence: "{Home}{Shift+Right}{Shift+Right}{Shift+Right}", when: composing}
    - {accept: "Control+4", send_sequence: "{Home}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}", when: composing}
    - {accept: "Control+5", send_sequence: "{Home}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}", when: composing}
    - {accept: "Control+6", send_sequence: "{Home}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}", when: composing}
    - {accept: "Control+7", send_sequence: "{Home}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}", when: composing}
  import_preset: default
mars:
  opencc_config: martian.json
  option_name: mars
menu:
  page_size: 9
recognizer:
  patterns:
    punct: "^/([0-9]|10|[A-z]+)$"
    uppercase: "^[A-Z].*$"
reverse_stroke:
  dictionary: stroke
  enable_completion: true
  preedit_format:
    - "xlit/hspnz/‰∏Ä‰∏®‰∏ø‰∏∂‰πô/"
  prefix: AB
  suffix: "'"
  tag: reverse_stroke
  tips: "„ÄîÁ≠ÜÁï´hspnz„Äï"
schema:
  author:
    - "gaboolic ÔºàË£ÅÁºù)"
  dependencies:
    - stroke
    - emoji
    - easy_en
    - jp_sela
  description: |
    ‰∫îÁ¨îÊï¥Âè• https://github.com/gaboolic/rime-shuangpin-fuzhuma

  name: "‰∫îÁ¨î86Êï¥Âè•"
  schema_id: wubi86
  version: "2024-04-24"
speller:
  algebra:
    - "derive/^(\\w)(\\w),(.+)$/$1$2/"
  alphabet: "zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA[/|"
  auto_select: true
  auto_select_pattern: "^[a-z]+/|^[a-df-zA-DF-Z]\\w{3}|^e\\w{4}"
  delimiter: " '"
  initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA
  max_code_length: 5
switches:
  - name: ascii_mode
    states: ["‰∏≠Êñá", "Ë•øÊñá"]
  - name: full_shape
    states: ["ÂçäËßí", "ÂÖ®Ëßí"]
  - name: traditionalization
    states: ["ÁÆÄ", "ÁπÅ"]
  - name: emoji
    states: ["üíÄ", "üòÑ"]
  - name: chaifen
    states: ["‰∏çÊãÜ", "ÊâåÊñ•"]
  - name: mars
    reset: 0
    states: ["Âú∞", "ÁÖã"]
  - name: ascii_punct
    states: ["„ÄÇÔºå", "ÔºéÔºå"]
traditionalize:
  opencc_config: s2t.json
  option_name: traditionalization
  tags:
    - abc
    - number
    - gregorian_to_lunar
  tips: none
translator:
  comment_format:
    - "xform/(^|[ '])[^[]+[[]/$1/"
  dictionary: egret_wubi_sentence
  prism: wubi86
  enable_completion: false
  enable_user_dict: false
  initial_quality: 10000
  spelling_hints: 0
